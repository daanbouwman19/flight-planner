name: Build, Test, and Release

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - name: Build
        run: cargo build --verbose --release

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Package Linux Release
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p release_package
          cp target/release/flight_planner release_package/
          cp aircrafts.csv release_package/
          cp com.github.daan.flight-planner.desktop release_package/
          cp -r assets release_package/assets
          cp install.sh release_package/install.sh
          cp uninstall.sh release_package/uninstall.sh
          chmod +x release_package/install.sh release_package/uninstall.sh
          tar -czvf flight-planner-linux.tar.gz -C release_package .

      - name: Build Windows MSI
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          build_msi.bat

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flight-planner-${{ matrix.os }}
          path: |
            flight-planner-linux.tar.gz
            dist/FlightPlannerSetup.msi
          if-no-files-found: ignore

  create-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test-and-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/flight-planner-windows-latest/FlightPlannerSetup.msi
            dist/flight-planner-ubuntu-latest/flight-planner-linux.tar.gz
